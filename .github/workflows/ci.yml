name: Release

on:
  pull_request:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new-release-version: ${{ steps.dry-release.outputs.new-release-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'

      - name: Install dependencies
        run: npm install

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Create release
        id: dry-release
        run: |
          OUTPUT="$(bash -c "unset GITHUB_ACTIONS && npx semantic-release 
          --dry-run --debug --no-ci --branches '${HEAD_REF}'")"
          NEW_RELEASE_VERSION=$(echo "$OUTPUT" | grep -oP 'The next release version is \K(\d+\.\d+\.\d+)')
          echo "new-release-version=$NEW_RELEASE_VERSION" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          HEAD_REF: ${{ github.head_ref }}

      - name: Echo new release version
        run: echo "New release version is ${{ steps.dry-release.outputs.new-release-version }}"
    permissions:
      contents: write